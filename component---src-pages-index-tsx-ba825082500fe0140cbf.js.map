{"version":3,"file":"component---src-pages-index-tsx-ba825082500fe0140cbf.js","mappings":"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","sources":["webpack://square_friends/./src/hooks/use-site-friends.ts","webpack://square_friends/./src/components/page-title/index.tsx","webpack://square_friends/./src/components/card/index.tsx","webpack://square_friends/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\"\n\nimport Data from \"../data/friendsList.json\"\nimport storage from \"../util/storage\"\n\nconst STORAGE_KEY = \"__square_friends\"\n\nexport interface IFriendPayload {\n  id: number\n  name: string\n  social: string\n  bio: string\n  date: string\n  following: boolean\n}\n\nfunction useSiteFriends() {\n  const [friends, setFriends] = React.useState<IFriendPayload[]>(() => {\n    const cachedData = storage.get(STORAGE_KEY)\n\n    if (cachedData) {\n      return cachedData\n    }\n\n    const data = Data.map(user => ({ ...user, following: false }))\n    storage.set(STORAGE_KEY, data)\n    return data\n  })\n\n  const toggleFavorite = React.useCallback(\n    (id: number) => (ev: React.MouseEvent<HTMLDivElement>) => {\n      ev.stopPropagation()\n\n      setFriends(data =>\n        data.map(f => (f.id === id ? { ...f, following: !f.following } : f))\n      )\n    },\n    []\n  )\n\n  const getFriend = (friendId: string) => {\n    return friends.filter(({ id }) => id === +friendId)[0]\n  }\n\n  React.useEffect(() => {\n    storage.set(STORAGE_KEY, friends)\n  }, [friends])\n\n  return { friends, toggleFavorite, getFriend }\n}\n\nexport { useSiteFriends }\n","import React from \"react\"\n\ntype Props = {\n  title: string\n  extra?: JSX.Element\n}\nconst PageTitle: React.FC<Props> = ({ title, extra }) => {\n  return (\n    <div className=\"page-title\">\n      <div className=\"title\">\n        <h2>{title}</h2>\n      </div>\n      {extra ? <div className=\"extra\">{extra}</div> : null}\n    </div>\n  )\n}\n\nexport { PageTitle as default }\n","import React from \"react\"\n\nimport { useSiteFiles } from \"../../hooks/use-site-files\"\n\ntype Props = React.HTMLAttributes<HTMLDivElement> & {\n  bannerName: string\n  title: string\n  subtitle: string\n  description: string\n  avatar: JSX.Element\n  action: JSX.Element\n}\nconst Card: React.FC<Props> = ({\n  bannerName,\n  title,\n  subtitle,\n  description,\n  avatar,\n  action,\n  ...rest\n}) => {\n  const files = useSiteFiles()\n\n  const cover = files.filter(\n    file => file.name === bannerName && file.relativeDirectory === \"covers\"\n  )[0]\n\n  return (\n    <div className=\"card\" {...rest}>\n      <div\n        style={{\n          position: \"absolute\",\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: \"59.35%\",\n          borderRadius: \"15px 15px 0px 0px\",\n          background: `url(${cover?.publicURL}) #ccc`,\n          backgroundSize: \"cover\",\n        }}\n      />\n      <div className=\"avatar\">{avatar}</div>\n      <div className=\"profile\">\n        <h2>{title}</h2>\n        <h5>{subtitle}</h5>\n        <p>{description}</p>\n      </div>\n      <div className=\"action\">{action}</div>\n    </div>\n  )\n}\n\nexport { Card as default }\n","import React from \"react\"\nimport { navigate, PageProps } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\nimport Image from \"../components/image\"\nimport PageTitle from \"../components/page-title\"\nimport UserCard from \"../components/card\"\nimport { useSiteFriends } from \"../hooks/use-site-friends\"\nimport { useSiteLanguage } from \"../hooks/use-site-language\"\n\nconst Index: React.FC<PageProps> = () => {\n  const { dictionary } = useSiteLanguage()\n  const { friends, toggleFavorite } = useSiteFriends()\n  const [openDropdown, setOpenDropdown] = React.useState<boolean>(false)\n  const [order, setOrder] = React.useState<\"Newest\" | \"Oldest\">(\"Newest\")\n\n  const sortFriendsList = React.useCallback(\n    (order: \"Newest\" | \"Oldest\") => () => {\n      setOrder(order)\n    },\n    []\n  )\n\n  const friendsList = React.useMemo(() => {\n    const sorted = friends.sort((a, b) => {\n      if (a.date > b.date) {\n        return order === \"Newest\" ? -1 : 1\n      }\n\n      if (a.date < b.date) {\n        return order === \"Newest\" ? 1 : -1\n      }\n\n      return 0\n    })\n\n    return sorted\n  }, [friends, order])\n\n  return (\n    <>\n      <SEO title={dictionary.indexSeo} />\n      <PageTitle\n        title={dictionary.homeTitle}\n        extra={\n          <div className=\"landing-extra\">\n            <Image name=\"search\" directory=\"icons\" />\n            <div\n              className=\"sort-items\"\n              onClick={() => setOpenDropdown(o => !o)}\n            >\n              <div className=\"view\">\n                {dictionary.sortBy}:{\" \"}\n                <b>\n                  {order === \"Newest\"\n                    ? dictionary.newestSort\n                    : dictionary.oldestSort}\n                </b>\n              </div>\n              <div className=\"vertical-line\" />\n              <Image className=\"icd\" name=\"dropdown\" directory=\"icons\" />\n              <div className={`dropdown ${openDropdown ? \" open\" : \"\"}`}>\n                <ul>\n                  <li onClick={sortFriendsList(\"Newest\")}>\n                    {dictionary.newestSort}\n                  </li>\n                  <li onClick={sortFriendsList(\"Oldest\")}>\n                    {dictionary.oldestSort}\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <Image name=\"filter\" directory=\"icons\" />\n          </div>\n        }\n      />\n\n      <div className=\"card-container\">\n        {friendsList.map(friend => (\n          <UserCard\n            key={friend.id}\n            title={friend.name}\n            subtitle={friend.social}\n            description={friend.bio}\n            avatar={<Image name={`${friend.id}`} directory={\"avatars\"} />}\n            bannerName={`${friend.id}`}\n            action={\n              <div\n                className=\"card-action\"\n                onClick={toggleFavorite(friend.id)}\n                role=\"button\"\n              >\n                {friend.following ? (\n                  <Image name=\"dot\" directory=\"icons\" className=\"dot\" />\n                ) : null}\n                {friend.following ? dictionary.following : dictionary.follow}\n              </div>\n            }\n            onClick={() => navigate(`/friend-details/${friend.id}`)}\n          />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport { Index as default }\n"],"names":["STORAGE_KEY","useSiteFriends","React","cachedData","storage","data","Data","user","following","friends","setFriends","toggleFavorite","id","ev","stopPropagation","map","f","getFriend","friendId","filter","PageTitle","title","extra","className","Card","bannerName","subtitle","description","avatar","action","rest","cover","useSiteFiles","file","name","relativeDirectory","style","position","left","right","top","bottom","borderRadius","background","publicURL","backgroundSize","Index","dictionary","useSiteLanguage","openDropdown","setOpenDropdown","order","setOrder","sortFriendsList","friendsList","sort","a","b","date","indexSeo","homeTitle","directory","onClick","o","sortBy","newestSort","oldestSort","friend","key","social","bio","role","follow","navigate"],"sourceRoot":""}