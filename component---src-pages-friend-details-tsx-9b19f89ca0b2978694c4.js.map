{"version":3,"file":"component---src-pages-friend-details-tsx-9b19f89ca0b2978694c4.js","mappings":"uLAUA,IAAMA,EAAuB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACrC,GCCiBC,EAAAA,EAAAA,gBAAc,cAAvBC,KAaIC,aDdGC,EAAf,EAAQL,MAA+BM,EAAvC,EAA0BL,YACpBM,EAAkBN,GAAeK,EAEvC,OACE,gBAACE,EAAA,EAAD,CACER,MAAOA,EACPS,cAAkBJ,EAAL,QACbK,KAAM,CACJ,CACEC,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACEC,SAAU,UACVD,QAASZ,GAEX,CACEa,SAAU,iBACVD,QAASL,GAEX,CACEI,KAAM,eACNC,QAASZ,GAEX,CACEW,KAAM,sBACNC,QAASL,Q,oyCEnCbO,EAAc,mBAWpB,SAASC,IACP,MAA8BC,EAAAA,UAAiC,WAC7D,IAAMC,EAAaC,EAAAA,EAAAA,IAAYJ,GAE/B,GAAIG,EACF,OAAOA,EAGT,IAAME,EAAOC,EAAAA,KAAS,SAAAC,GAAI,wBAAUA,EAAV,CAAgBC,WAAW,OAErD,OADAJ,EAAAA,EAAAA,IAAYJ,EAAaK,GAClBA,KATFI,EAAP,KAAgBC,EAAhB,KAYMC,EAAiBT,EAAAA,aACrB,SAACU,GAAD,OAAgB,SAACC,GACfA,EAAGC,kBACH,IAAIC,GAAU,EAEdL,GAAW,SAAAL,GAAI,OACbA,EAAKW,KAAI,SAAAC,GAIP,OAHIA,EAAEL,KAAOA,GAAOK,EAAET,YACpBO,GAAU,GAELE,EAAEL,KAAOA,EAAT,iBAAmBK,EAAnB,CAAsBT,WAAYS,EAAET,YAAcS,QAI7DC,EAAAA,GAAAA,MAAc,CACZC,OAAQ,SACRC,SAAU,SACVC,MAAON,EAAU,MAAQ,UAG7B,IAWF,OAJAb,EAAAA,WAAgB,WACdE,EAAAA,EAAAA,IAAYJ,EAAaS,KACxB,CAACA,IAEG,CAAEA,QAAAA,EAASE,eAAAA,EAAgBW,UARhB,SAACC,GACjB,OAAOd,EAAQe,QAAO,qBAAGZ,MAAiBW,KAAU,O,4IC7ClDE,EAAqC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtCC,GAAQC,EAAAA,EAAAA,KACNN,GAAcrB,EAAAA,EAAAA,KAAdqB,UACAO,GAAeC,EAAAA,EAAAA,KAAfD,WAEFE,EAAST,EAAUI,EAAO,MAE1BM,EAAQL,EAAMH,QAClB,SAAAS,GAAI,OAAKA,EAAKpC,QAASkC,MAAAA,OAAf,EAAeA,EAAQnB,KAAiC,WAA3BqB,EAAKC,qBAC1C,GAEF,OACE,uBAAKC,UAAU,kBACb,gBAAC,IAAD,CAAKjD,MAAM,mBAEX,uBAAKiD,UAAU,WACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKR,EAAWS,eAGzBP,EAKA,gCACE,uBAAKI,UAAU,UACb,uBACEA,UAAU,QACVI,MAAO,CACLC,WAAW,QAAQR,MAAAA,OAAT,EAASA,EAAOS,WAAhB,SACVC,eAAgB,WAGpB,gBAAC,IAAD,CACEP,UAAU,SACVtC,KAAI,GAAKkC,EAAOnB,GAChB+B,UAAS,aAIb,uBAAKR,UAAU,WACb,0BAAKJ,EAAOlC,MACZ,yBAAIkC,EAAOa,QACX,4BACGf,EAAWgB,YADd,KAC6B,IAAIC,KAAKf,EAAOgB,MAAMC,gBAIrD,uBAAKb,UAAU,YAEf,uBAAKA,UAAU,OACb,0BAAKN,EAAWoB,KAChB,yBAAIlB,EAAOkB,OAhCf,uBAAKd,UAAU,SACb","sources":["webpack://square_friends/./src/components/seo.tsx","webpack://square_friends/./src/hooks/use-site-metadata.ts","webpack://square_friends/./src/hooks/use-site-friends.ts","webpack://square_friends/./src/pages/friend-details/[...].tsx"],"sourcesContent":["import React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\ntype Props = {\n  title: string\n  description?: string\n}\n\nconst SEO: React.FC<Props> = ({ title, description }) => {\n  const { title: siteTitle, description: siteDesc } = useSiteMetadata()\n  const metaDescription = description || siteDesc\n\n  return (\n    <Helmet\n      title={title}\n      titleTemplate={`${siteTitle} - %s`}\n      meta={[\n        {\n          name: \"description\",\n          content: metaDescription,\n        },\n        {\n          property: \"og:type\",\n          content: \"website\",\n        },\n        {\n          property: \"og:name\",\n          content: title,\n        },\n        {\n          property: \"og:description\",\n          content: metaDescription,\n        },\n        {\n          name: \"twitter:name\",\n          content: title,\n        },\n        {\n          name: \"twitter:description\",\n          content: metaDescription,\n        },\n      ]}\n    />\n  )\n}\n\nexport { SEO as default }\n","import { graphql, useStaticQuery } from \"gatsby\"\n\ntype SiteMetadata = {\n  site: {\n    siteMetadata: {\n      description: string\n      title: string\n    }\n  }\n}\n\nfunction useSiteMetadata() {\n  const { site } = useStaticQuery<SiteMetadata>(\n    graphql`\n      query SiteMetadata {\n        site {\n          siteMetadata {\n            description\n            title\n          }\n        }\n      }\n    `\n  )\n\n  return site.siteMetadata\n}\n\nexport { useSiteMetadata }\n","import React from \"react\"\nimport ReactGA from \"react-ga\"\n\nimport Data from \"../data/friendsList.json\"\nimport storage from \"../util/storage\"\n\nconst STORAGE_KEY = \"__square_friends\"\n\nexport interface IFriendPayload {\n  id: number\n  name: string\n  social: string\n  bio: string\n  date: string\n  following: boolean\n}\n\nfunction useSiteFriends () {\n  const [friends, setFriends] = React.useState<IFriendPayload[]>(() => {\n    const cachedData = storage.get(STORAGE_KEY)\n\n    if (cachedData) {\n      return cachedData\n    }\n\n    const data = Data.map(user => ({ ...user, following: false }))\n    storage.set(STORAGE_KEY, data)\n    return data\n  })\n\n  const toggleFavorite = React.useCallback(\n    (id: number) => (ev: React.MouseEvent<HTMLDivElement>) => {\n      ev.stopPropagation()\n      let connect = false\n\n      setFriends(data =>\n        data.map(f => {\n          if (f.id === id && !f.following) {\n            connect = true\n          }\n          return f.id === id ? { ...f, following: !f.following } : f\n        })\n      )\n\n      ReactGA.event({\n        action: \"Follow\",\n        category: \"Social\",\n        label: connect ? \"Yes\" : \"No\"\n      })\n    },\n    []\n  )\n\n  const getFriend = (friendId: string) => {\n    return friends.filter(({ id }) => id === +friendId)[0]\n  }\n\n  React.useEffect(() => {\n    storage.set(STORAGE_KEY, friends)\n  }, [friends])\n\n  return { friends, toggleFavorite, getFriend }\n}\n\nexport { useSiteFriends }\n","import React from \"react\"\nimport { Link, PageProps } from \"gatsby\"\n\nimport SEO from \"../../components/seo\"\nimport Image from \"../../components/image\"\nimport { useSiteFiles } from \"../../hooks/use-site-files\"\nimport { useSiteLanguage } from \"../../hooks/use-site-language\"\nimport { useSiteFriends } from \"../../hooks/use-site-friends\"\n\nconst FriendDetails: React.FC<PageProps> = ({ params }) => {\n  const files = useSiteFiles()\n  const { getFriend } = useSiteFriends()\n  const { dictionary } = useSiteLanguage()\n\n  const friend = getFriend(params[\"*\"])\n\n  const cover = files.filter(\n    file => +file.name === friend?.id && file.relativeDirectory === \"covers\"\n  )[0]\n\n  return (\n    <div className=\"friend-details\">\n      <SEO title=\"Friend Details\" />\n\n      <div className=\"go-back\">\n        <Link to=\"/\">{dictionary.homeBackLink}</Link>\n      </div>\n\n      {!friend ? (\n        <div className=\"empty\">\n          <p>No friend found!</p>\n        </div>\n      ) : (\n        <>\n          <div className=\"images\">\n            <div\n              className=\"cover\"\n              style={{\n                background: `url(${cover?.publicURL}) #ccc`,\n                backgroundSize: \"cover\",\n              }}\n            />\n            <Image\n              className=\"avatar\"\n              name={`${friend.id}`}\n              directory={`avatars`}\n            />\n          </div>\n\n          <div className=\"profile\">\n            <h2>{friend.name}</h2>\n            <p>{friend.social}</p>\n            <span>\n              {dictionary.connectedOn}: {new Date(friend.date).toUTCString()}\n            </span>\n          </div>\n\n          <div className=\"divider\" />\n\n          <div className=\"bio\">\n            <h2>{dictionary.bio}</h2>\n            <p>{friend.bio}</p>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport { FriendDetails as default }\n"],"names":["SEO","title","description","useStaticQuery","site","siteMetadata","siteTitle","siteDesc","metaDescription","Helmet","titleTemplate","meta","name","content","property","STORAGE_KEY","useSiteFriends","React","cachedData","storage","data","Data","user","following","friends","setFriends","toggleFavorite","id","ev","stopPropagation","connect","map","f","ReactGA","action","category","label","getFriend","friendId","filter","FriendDetails","params","files","useSiteFiles","dictionary","useSiteLanguage","friend","cover","file","relativeDirectory","className","Link","to","homeBackLink","style","background","publicURL","backgroundSize","directory","social","connectedOn","Date","date","toUTCString","bio"],"sourceRoot":""}